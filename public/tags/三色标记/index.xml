<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>三色标记 on 编程日记</title>
    <link>/tags/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0/</link>
    <description>Recent content in 三色标记 on 编程日记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2019-{year} jimyag. All Rights Reserved. </copyright>
    <lastBuildDate>Mon, 17 Jan 2022 20:46:07 +0000</lastBuildDate><atom:link href="/tags/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang中GC回收机制三色标记与混合写屏障</title>
      <link>/posts/c21b4284/</link>
      <pubDate>Mon, 17 Jan 2022 20:46:07 +0000</pubDate>
      
      <guid>/posts/c21b4284/</guid>
      <description>&lt;p&gt;垃圾回收(Garbage Collection，简称GC)是编程语言中提供的自动的内存管理机制，自动释放不需要的内存对象，让出存储器资源。GC过程中无需程序员手动执行。GC机制在现代很多编程语言都支持，GC能力的性能与优劣也是不同语言之间对比度指标之一。&lt;/p&gt;
&lt;p&gt;Golang在GC的演进过程中也经历了很多次变革，Go V1.3之前的标记-清除(mark and sweep)算法，Go V1.3之前的标记-清扫(mark and sweep)的缺点&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
