<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on 编程日记</title>
    <link>/tags/go/</link>
    <description>Recent content in Go on 编程日记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2019-{year} jimyag. All Rights Reserved. </copyright>
    <lastBuildDate>Wed, 27 Apr 2022 13:17:31 +0800</lastBuildDate><atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>减少下层服务的压力 SingleFlight</title>
      <link>/posts/34618820/</link>
      <pubDate>Wed, 27 Apr 2022 13:17:31 +0800</pubDate>
      
      <guid>/posts/34618820/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jimyag/singleflight&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;jimyag/singleflight&lt;/a&gt; 包主要是用来做并发控制，常见的比如&lt;code&gt;防止缓存击穿&lt;/code&gt; &lt;code&gt;合并查询请求&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go泛型的限制和对中间件的影响</title>
      <link>/posts/33cd41f9/</link>
      <pubDate>Tue, 26 Apr 2022 23:52:28 +0800</pubDate>
      
      <guid>/posts/33cd41f9/</guid>
      <description>&lt;p&gt;本文是基于GoCN 2022年第八期泛型的讲座的笔记。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【第三届字节跳动青训营｜刷题打卡】</title>
      <link>/posts/537fd5d3/</link>
      <pubDate>Tue, 19 Apr 2022 19:18:38 +0800</pubDate>
      
      <guid>/posts/537fd5d3/</guid>
      <description>&lt;p&gt;【第三届字节跳动青训营｜刷题打卡】记录&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go中rpc包的使用</title>
      <link>/posts/11a90fe7/</link>
      <pubDate>Fri, 25 Mar 2022 14:15:03 +0000</pubDate>
      
      <guid>/posts/11a90fe7/</guid>
      <description>&lt;p&gt;Go语言的RPC包的路径为&lt;code&gt;net/rpc&lt;/code&gt;，也就是放在了net包目录下面。因此我们可以猜测该RPC包是建立在net包基础之上的。我们基于http实现了一个打印例子。下面我们尝试基于rpc实现一个类似的例子。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安装Go1.18环境</title>
      <link>/posts/1dc739af/</link>
      <pubDate>Wed, 16 Mar 2022 07:33:51 +0000</pubDate>
      
      <guid>/posts/1dc739af/</guid>
      <description>&lt;p&gt;Go1.18在今天（3-16）已经发布，Go 1.18 是一个包含大量新功能的版本，同时不仅改善了性能，也对语言本身做了有史以来最大的改变。毫不夸张地说，Go 1.18 的部分设计十多年前，在第一次发布 Go 时就开始了构思(例如泛型，最早的时候在2009年Russ Cox 在博客里面讨论过泛型如何设计https://research.swtch.com/generic)。&lt;/p&gt;
&lt;p&gt;如果你想探索使用泛型优化和简化代码的最佳方法。查看最新版本的发行说明(&lt;a href=&#34;https://go.dev/doc/go1.18&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;https://go.dev/doc/go1.18&lt;/a&gt;) 有更多关于在 Go 1.18 中使用泛型的详细信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为什么Request.Body需要被关闭</title>
      <link>/posts/60b013aa/</link>
      <pubDate>Thu, 24 Feb 2022 15:31:16 +0000</pubDate>
      
      <guid>/posts/60b013aa/</guid>
      <description>&lt;p&gt;面试时被问到为什么request中的body被访问一次就不能再次访问了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在同一机器上安装Go的不同版本</title>
      <link>/posts/17eab2e7/</link>
      <pubDate>Thu, 17 Feb 2022 23:28:32 +0000</pubDate>
      
      <guid>/posts/17eab2e7/</guid>
      <description>&lt;p&gt;go1.18已经支持泛型，但是目前工作使用的是1.17。如何在不卸载原有版本情况下下载1.18beta版本？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>channel简介与实现原理</title>
      <link>/posts/fb1f55a9/</link>
      <pubDate>Wed, 26 Jan 2022 21:49:55 +0000</pubDate>
      
      <guid>/posts/fb1f55a9/</guid>
      <description>&lt;p&gt;作为 Go 核心的数据结构和 Goroutine 之间的通信方式，Channel 是支撑 Go 语言高性能并发编程模型的重要结构本文会介绍管道 Channel 的设计原理、数据结构和常见操作，例如 Channel 的创建、发送、接收和关闭。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Linux安装Go环境</title>
      <link>/posts/c56e43df/</link>
      <pubDate>Mon, 17 Jan 2022 15:16:35 +0000</pubDate>
      
      <guid>/posts/c56e43df/</guid>
      <description>&lt;p&gt;本文介绍如何在Linux中配置Go语言的环境&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
