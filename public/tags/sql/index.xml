<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on 编程日记</title>
    <link>/tags/sql/</link>
    <description>Recent content in SQL on 编程日记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2019-{year} jimyag. All Rights Reserved. </copyright>
    <lastBuildDate>Thu, 24 Mar 2022 21:34:45 +0000</lastBuildDate><atom:link href="/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从SQL生成可直接调用的go接口-sqlc</title>
      <link>/posts/900c3133/</link>
      <pubDate>Thu, 24 Mar 2022 21:34:45 +0000</pubDate>
      
      <guid>/posts/900c3133/</guid>
      <description>&lt;p&gt;在 Go 语言中编写数据库操作代码真的非常痛苦！&lt;code&gt;database/sql&lt;/code&gt;标准库提供的都是比较底层的接口。我们需要编写大量重复的代码。大量的模板代码不仅写起来烦，而且还容易出错。有时候字段类型修改了一下，可能就需要改动很多地方；添加了一个新字段，之前使用&lt;code&gt;select *&lt;/code&gt;查询语句的地方都要修改。如果有些地方有遗漏，可能就会造成运行时&lt;code&gt;panic&lt;/code&gt;。即使使用 ORM 库，这些问题也不能完全解决！这时候，&lt;code&gt;sqlc&lt;/code&gt;来了！&lt;code&gt;sqlc&lt;/code&gt;可以根据我们编写的 SQL 语句生成类型安全的、地道的 Go 接口代码，我们要做的只是调用这些方法。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
